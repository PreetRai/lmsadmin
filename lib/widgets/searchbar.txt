import 'dart:ffi';

import 'package:flutter/material.dart';
import 'package:material_floating_search_bar/material_floating_search_bar.dart';

class Searchbar extends StatefulWidget {
  const Searchbar({Key? key}) : super(key: key);

  @override
  _SearchbarState createState() => _SearchbarState();
}

class _SearchbarState extends State<Searchbar> {
  static const historylength = 5;
  final List<String> _searchHistory = [
    'fucsia',
  ];
  late List<String> filteredSearchHistory;
  late String selectedTerm;
  // ignore: non_constant_identifier_names
  List<String> FilterSearchTerm({
    required String filter,
  }) {
    if (filter != null && filter.isNotEmpty) {
      return _searchHistory.reversed
          .where((term) => term.startsWith(filter))
          .toList();
    } else {
      return _searchHistory.reversed.toList();
    }
  }

  void addSearchTerm(String term) {
    if (_searchHistory.contains(term)) {
      putSearchTermFirst(term);
      return;
    }
    _searchHistory.add(term);
    if (_searchHistory.length > historylength) {
      _searchHistory.removeRange(0, _searchHistory.length - historylength);
    }

    var filter2 = null;
    filteredSearchHistory = FilterSearchTerm(filter: filter2);
  }

  void deleteSearchTerm(String term) {
    _searchHistory.removeWhere((t) => t == term);
    var filter2 = null;
    filteredSearchHistory = FilterSearchTerm(filter: filter2);
  }

  @override
  initState() {
    super.initState();
    var filter2 = null;
    filteredSearchHistory = FilterSearchTerm(filter: filter2);
  }

  void putSearchTermFirst(String term) {
    deleteSearchTerm(term);
    addSearchTerm(term);
  }

  @override
  Widget build(BuildContext context) {
    return FloatingSearchBar(
      body: SearchResultsListView(
        searchTerm: null;
      ),

    );
  }
}

class SearchResultsListView extends StatelessWidget {
   
  
  @override
  Widget build(BuildContext context) {

    final fsb = FloatingSearchBar.of(context);

    return ListView(
      padding: EdgeInsets.only(top: fsb.height + fsb.margins.vertical),
      children: List.generate(
        50,
        (index) => ListTile(
          title: Text('$searchTerm search result'),
          subtitle: Text(index.toString()),
        ),
      ),
    );
  }
}
